# -*- coding: utf-8 -*-
"""Chris - time aware bias detection

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14PwUyVchgAF9JaFOieCd2P9YBWKjkTMI
"""

# ✅ STEP 0: Install requirements (if not already installed)
!pip install vaderSentiment --quiet
import nltk
nltk.download('stopwords')


# ✅ STEP 1: Import Libraries
import pandas as pd
import re
import matplotlib.pyplot as plt
import seaborn as sns
from nltk.corpus import stopwords
from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer


# ✅ STEP 2: Create Sample Data (replace this with your own CSV if needed)
data = {
   'date': ['2020-01-15', '2020-02-10', '2020-02-20', '2020-03-05'],
   'text': [
       "We must act now — lives are at stake! The situation is dire.",
       "According to recent studies, carbon levels have increased dramatically.",
       "Experts from the World Health Organization advise immediate action.",
       "It’s our moral duty to protect the planet for future generations."
   ]
}
df = pd.DataFrame(data)


# ✅ STEP 3: Clean and preprocess text
stop_words = set(stopwords.words('english'))


def preprocess(text):
   text = text.lower()
   text = re.sub(r'\W+', ' ', text)
   tokens = text.split()
   tokens = [word for word in tokens if word not in stop_words]
   return ' '.join(tokens)


df['clean_text'] = df['text'].apply(preprocess)


# ✅ STEP 4: Convert dates and extract time period
df['date'] = pd.to_datetime(df['date'])
df['month'] = df['date'].dt.to_period('M')


# ✅ STEP 5: Define framing categories using keyword sets
framing_keywords = {
   'emotional': ['fear', 'urgent', 'crisis', 'outrage', 'dire', 'alarming', 'terrifying', 'horrific'],
   'evidence': ['data', 'study', 'studies', 'statistical', 'research', 'survey', 'evidence', 'graph', 'report'],
   'authority': ['experts', 'scientists', 'officials', 'world health organization', 'dr', 'professor', 'government'],
   'moral': ['duty', 'responsibility', 'right', 'wrong', 'justice', 'ethical', 'moral', 'values'],
   'conflict': ['vs', 'against', 'battle', 'fight', 'war', 'clash', 'divide', 'opposition']
}


def detect_frames(text):
   frames = []
   for frame_type, keywords in framing_keywords.items():
       if any(word in text for word in keywords):
           frames.append(frame_type)
   return frames if frames else ['none']


df['frames'] = df['clean_text'].apply(detect_frames)


# ✅ STEP 6: Expand the 'frames' list into individual rows
df_exploded = df.explode('frames')


# ✅ STEP 7: Group and count frame usage by month
frame_counts = df_exploded.groupby(['month', 'frames']).size().unstack(fill_value=0)
frame_counts.index = frame_counts.index.astype(str)


# ✅ STEP 8: Plot epistemic frame usage over time
plt.figure(figsize=(10, 6))
sns.lineplot(data=frame_counts)
plt.title("Epistemic Framing Over Time")
plt.xlabel("Month")
plt.ylabel("Number of Articles Using Frame")
plt.grid(True)
plt.legend(title="Frame Type")
plt.tight_layout()
plt.show()


# ✅ Optional: Show final data
df[['date', 'text', 'frames']]